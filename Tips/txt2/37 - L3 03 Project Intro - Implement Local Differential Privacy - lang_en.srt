1
00:00:00,000 --> 00:00:02,925
In this project, what I'd like for you to do is to

2
00:00:02,925 --> 00:00:05,730
implement randomized response in our database.

3
00:00:05,730 --> 00:00:08,160
You're going to "flip coins" by just using

4
00:00:08,160 --> 00:00:11,400
a simple 1/0 random number generator in Python.

5
00:00:11,400 --> 00:00:13,575
So for each entry in the database,

6
00:00:13,575 --> 00:00:15,480
you want to flip two coins.

7
00:00:15,480 --> 00:00:18,090
Generate two random 1/0 responses.

8
00:00:18,090 --> 00:00:19,690
If the first coin is heads,

9
00:00:19,690 --> 00:00:21,845
leave the entry in the database as it is.

10
00:00:21,845 --> 00:00:23,749
If the first coin is tails,

11
00:00:23,749 --> 00:00:28,405
then reset that entry in the database according to the second coin flipped as you were.

12
00:00:28,405 --> 00:00:31,370
Then, I want you to perform a query both on

13
00:00:31,370 --> 00:00:36,140
the original database and on the database which then modified with random bits.

14
00:00:36,140 --> 00:00:39,350
Perform the mean query on both of these databases.

15
00:00:39,350 --> 00:00:42,760
Return the results of both queries so that we can compare them.

16
00:00:42,760 --> 00:00:44,690
After implementing this logic, however,

17
00:00:44,690 --> 00:00:47,510
I want you to study how much the noise changes on

18
00:00:47,510 --> 00:00:50,720
the output of the query databases of varying sizes.

19
00:00:50,720 --> 00:00:56,255
Report both the true query and the noised query for databases of sizes 10,

20
00:00:56,255 --> 00:00:58,800
100, 1000, and 10,000.

