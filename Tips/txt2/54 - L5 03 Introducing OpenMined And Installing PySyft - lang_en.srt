1
00:00:00,000 --> 00:00:02,790
Up until this point, we've been learning about

2
00:00:02,790 --> 00:00:06,525
deep learning in the context of privacy by building things from scratch,

3
00:00:06,525 --> 00:00:08,070
and this is a great way to learn.

4
00:00:08,070 --> 00:00:11,940
However, moving forward we're going to start doing things that are quite complex.

5
00:00:11,940 --> 00:00:14,850
So we're going to want to start using software packages that

6
00:00:14,850 --> 00:00:18,025
are a bit more purpose-built for privacy-preserving deep learning.

7
00:00:18,025 --> 00:00:20,750
For that, we're going to look to the OpenMined, open-source community.

8
00:00:20,750 --> 00:00:22,860
This open-source community has built a variety of tools

9
00:00:22,860 --> 00:00:24,900
that are useful for privacy in the context of deep learning,

10
00:00:24,900 --> 00:00:26,760
including tools for Federated Learning,

11
00:00:26,760 --> 00:00:29,640
for Differential Privacy, for Encrypted Computation, and more.

12
00:00:29,640 --> 00:00:32,580
In particular, we're going to look at the package called PySyft.

13
00:00:32,580 --> 00:00:33,960
So, if you scroll down to the bottom,

14
00:00:33,960 --> 00:00:35,890
you can click this Start Contributing button,

15
00:00:35,890 --> 00:00:38,840
and it will take you to the OpenMined GitHub organization.

16
00:00:38,840 --> 00:00:40,775
So you'll see PySyft is here at the top.

17
00:00:40,775 --> 00:00:43,370
This is a library that builds on top of PyTorch and

18
00:00:43,370 --> 00:00:46,380
TensorFlow for encrypted privacy-preserving deep learning.

19
00:00:46,380 --> 00:00:48,110
For our exercises, we're going to be looking at

20
00:00:48,110 --> 00:00:50,380
the extensions that they've made to PyTorch.

21
00:00:50,380 --> 00:00:51,890
Now, the first thing I'd like for you to do,

22
00:00:51,890 --> 00:00:53,555
scroll down and install Syft.

23
00:00:53,555 --> 00:00:55,940
So you see installation should be quite simple.

24
00:00:55,940 --> 00:00:57,540
So, pip install syft,

25
00:00:57,540 --> 00:00:59,660
and this should download the appropriate dependencies

26
00:00:59,660 --> 00:01:02,090
needed for the library as well as the library itself.

27
00:01:02,090 --> 00:01:03,575
The next thing that I'd like for you to do,

28
00:01:03,575 --> 00:01:06,410
is head on over to the Slack.

29
00:01:06,410 --> 00:01:08,780
So you can click that button here on the Read Me,

30
00:01:08,780 --> 00:01:12,560
or you can come back to the main homepage and click this chat on Slack button.

31
00:01:12,560 --> 00:01:15,140
If you follow the form to create an account,

32
00:01:15,140 --> 00:01:17,090
it will ultimately be led to a portal.

33
00:01:17,090 --> 00:01:18,470
It looks a lot like this.

34
00:01:18,470 --> 00:01:20,300
Slack is, if you haven't used it before,

35
00:01:20,300 --> 00:01:22,360
composed of several main components.

36
00:01:22,360 --> 00:01:26,475
So first, there are channels which are group chats or group discussions.

37
00:01:26,475 --> 00:01:28,300
Then, there are direct messages down here.

38
00:01:28,300 --> 00:01:29,620
Now, when you first get here,

39
00:01:29,620 --> 00:01:31,430
what I would like for you to do is go ahead

40
00:01:31,430 --> 00:01:33,290
and introduce yourself in the general discussion.

41
00:01:33,290 --> 00:01:35,660
You will find that lots of other people who are taking the course,

42
00:01:35,660 --> 00:01:37,220
as well as other people who are interested in

43
00:01:37,220 --> 00:01:38,960
privacy-preserving deep learning in general,

44
00:01:38,960 --> 00:01:40,705
always present in this community.

45
00:01:40,705 --> 00:01:44,175
As privacy-preserving deep learning is still a bit of a nascent community,

46
00:01:44,175 --> 00:01:46,775
it's a good idea to get to know other people who are in the field.

47
00:01:46,775 --> 00:01:49,325
Secondly, as we're just now installing PySyft,

48
00:01:49,325 --> 00:01:51,265
I'd like for you to head over to beginner.

49
00:01:51,265 --> 00:01:55,640
Beginner is a great place to ask questions if you're having trouble installing things,

50
00:01:55,640 --> 00:01:57,829
if you having trouble with any of the examples,

51
00:01:57,829 --> 00:02:01,880
if you think you found a bug in the code or a bug and one of the demos,

52
00:02:01,880 --> 00:02:03,280
or if you get stuck on a project.

53
00:02:03,280 --> 00:02:05,090
This place is a friendly place to build,

54
00:02:05,090 --> 00:02:08,300
ask questions no matter how simple or elementary they might be.

55
00:02:08,300 --> 00:02:12,380
If you're interested in knowing how PySyft is actually being developed as we go,

56
00:02:12,380 --> 00:02:15,205
you can see every new code update and change.

57
00:02:15,205 --> 00:02:17,700
Actually gets pushed into this co-channel,

58
00:02:17,700 --> 00:02:19,155
so it's a good channel to watch.

59
00:02:19,155 --> 00:02:21,170
Of course in here, other people introduce

60
00:02:21,170 --> 00:02:24,920
themselves and talk about their backgrounds and what they're interested in,

61
00:02:24,920 --> 00:02:27,010
and why they're interested in privacy-preserving deep learning.

62
00:02:27,010 --> 00:02:29,890
You can get to know other people who are also in this channel.

63
00:02:29,890 --> 00:02:33,450
Now, development discussion for improving PySyft and seeing how

64
00:02:33,450 --> 00:02:37,455
PySyft is changing happens in this #team_pysyft channel,

65
00:02:37,455 --> 00:02:39,470
which you can keep track off if you're interested.

66
00:02:39,470 --> 00:02:40,745
One more thing of note,

67
00:02:40,745 --> 00:02:42,060
in the channel section,

68
00:02:42,060 --> 00:02:44,740
you'll see there are actually a lot of local communities for OpenMined.

69
00:02:44,740 --> 00:02:47,210
So in particular, people like to gather in

70
00:02:47,210 --> 00:02:50,450
various places around the world to have face-to-face meetups.

71
00:02:50,450 --> 00:02:53,660
It's a good idea to go ahead and look and see if your community is listed,

72
00:02:53,660 --> 00:02:56,240
and if it's not, feel free to go ahead and create one.

73
00:02:56,240 --> 00:02:59,015
With that, now we're going to get back to

74
00:02:59,015 --> 00:03:02,720
actually walking through some new tutorials in privacy-preserving deep learning.

75
00:03:02,720 --> 00:03:04,910
So now, what is PySyft?

76
00:03:04,910 --> 00:03:08,270
PySyft is an extension of several deep learning libraries

77
00:03:08,270 --> 00:03:11,740
with new pieces that make it easier to do privacy-preserving deep learning.

78
00:03:11,740 --> 00:03:14,835
Let me show you how to setup PySyft inside of your [inaudible] notebook.

79
00:03:14,835 --> 00:03:17,315
First, we're going to import Torch like we normally would.

80
00:03:17,315 --> 00:03:22,010
We can create normal Torch tensors and use Torch in the normal way.

81
00:03:22,010 --> 00:03:25,190
However, Syft is an extension of Torch.

82
00:03:25,190 --> 00:03:27,810
So if we import Syft as sy,

83
00:03:27,810 --> 00:03:30,510
the next thing we want to do is create a hook.

84
00:03:30,510 --> 00:03:31,920
What this is going to do?

85
00:03:31,920 --> 00:03:35,330
This is going to actually modify PyTorch with new functionality.

86
00:03:35,330 --> 00:03:38,860
So I'm actually going to pass in the reference to the Torch library here.

87
00:03:38,860 --> 00:03:43,700
Behind the scenes, it actually just modified a bunch of PyTorch API,

88
00:03:43,700 --> 00:03:46,730
so that we can do things that we'd like to do with privacy-preserving deep learning.

89
00:03:46,730 --> 00:03:51,105
But you'll notice that the pieces of PyTorch that we're familiar with work as advertised.

90
00:03:51,105 --> 00:03:53,105
In the next lesson, we're going to start jumping into

91
00:03:53,105 --> 00:03:55,820
some of the new functionality that Syft has given us.

